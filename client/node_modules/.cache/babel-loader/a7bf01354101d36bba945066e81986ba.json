{"ast":null,"code":"var _jsxFileName = \"/Users/vanessa/Desktop/questionnaire/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Survey() {\n  _s();\n\n  // user's response\n  const [name, setName] = useState(\"\"); // backend data \n\n  const [qn, setQn] = useState({});\n  const [qns, setQns] = useState([]);\n  const [list, setList] = useState(true);\n  const [card, setCard] = useState(false); // fetch list of questions \n\n  useEffect(() => {\n    fetch(\"http://localhost:3500/questions/list\").then(res => res.json()).then(resJson => setQns(resJson.data));\n  }, []);\n\n  let showCard = id => {\n    fetch(`http://localhost:3500/questions/${id}`).then(res => res.json()).then(resJson => {\n      setQn(resJson.data);\n      setList(false);\n      setCard(true);\n    });\n  };\n\n  let showList = () => {\n    setCard(false);\n    setList(true);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(`The name you entered was: ${name}`);\n  }; // return (\n  //     <form onSubmit={handleSubmit}>\n  //       <label>\n  //         <p>What is your full name?</p>\n  //         <input \n  //           type=\"text\"\n  //           value={name}\n  //           onChange={(e) => setName(e.target.value)}\n  //         />\n  //       </label>\n  //       <input type=\"submit\" />\n  //     </form>\n  // )\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [list ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group\",\n      children: qns.map(qn => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => showCard(qn._id),\n        className: \"list-group-item list-group-item-action\",\n        children: qn.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : null, card ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      style: {\n        width: \"18rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"card-title\",\n          children: qn.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: qn.runs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => showList(),\n          class: \"btn btn-primary\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Survey, \"jZ/AjIc2XacWEnNmYGxoLVo1idg=\");\n\n_c = Survey;\nexport default Survey;\n\nvar _c;\n\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["useState","useEffect","Survey","name","setName","qn","setQn","qns","setQns","list","setList","card","setCard","fetch","then","res","json","resJson","data","showCard","id","showList","handleSubmit","e","preventDefault","alert","map","_id","width","runs"],"sources":["/Users/vanessa/Desktop/questionnaire/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction Survey() {\n  // user's response\n  const [name, setName] = useState(\"\");\n\n  // backend data \n  const [qn, setQn] = useState({})\n  const [qns, setQns] = useState([])\n  const [list, setList] = useState(true)\n  const [card, setCard] = useState(false)\n\n  // fetch list of questions \n  useEffect(() => {\n    fetch(\"http://localhost:3500/questions/list\")\n    .then(res => res.json())\n    .then(resJson => setQns(resJson.data))\n  }, []);\n\n  let showCard = (id) => {\n    fetch(`http://localhost:3500/questions/${id}`)\n      .then(res => res.json())\n      .then(resJson => {\n        setQn(resJson.data);\n        setList(false);\n        setCard(true);\n      });\n  };\n\n  let showList = () => {\n    setCard(false)\n    setList(true)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    alert(`The name you entered was: ${name}`)\n  }\n\n  // return (\n  //     <form onSubmit={handleSubmit}>\n  //       <label>\n  //         <p>What is your full name?</p>\n  //         <input \n  //           type=\"text\"\n  //           value={name}\n  //           onChange={(e) => setName(e.target.value)}\n  //         />\n  //       </label>\n  //       <input type=\"submit\" />\n  //     </form>\n  // )\n\n  return (\n    <div className=\"container\">\n      {list ? (\n        <div className=\"list-group\">\n          {qns.map((qn) => (\n            <li\n              onClick={() => showCard(qn._id)}\n              className=\"list-group-item list-group-item-action\"\n            >\n              {qn.name}\n            </li>\n          ))}\n        </div>\n      ) : null}\n      {card ? (\n        <div class=\"card\" style={{ width: \"18rem\" }}>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{qn.name}</h5>\n            <p class=\"card-text\">{qn.runs}</p>\n            <div onClick={() => showList()} class=\"btn btn-primary\">\n              Back\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Survey;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC,CAFgB,CAIhB;;EACA,MAAM,CAACK,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA5B;EACA,MAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC,CARgB,CAUhB;;EACAC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,sCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,OAAO,IAAIT,MAAM,CAACS,OAAO,CAACC,IAAT,CAFvB;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAMA,IAAIC,QAAQ,GAAIC,EAAD,IAAQ;IACrBP,KAAK,CAAE,mCAAkCO,EAAG,EAAvC,CAAL,CACGN,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,OAAO,IAAI;MACfX,KAAK,CAACW,OAAO,CAACC,IAAT,CAAL;MACAR,OAAO,CAAC,KAAD,CAAP;MACAE,OAAO,CAAC,IAAD,CAAP;IACD,CANH;EAOD,CARD;;EAUA,IAAIS,QAAQ,GAAG,MAAM;IACnBT,OAAO,CAAC,KAAD,CAAP;IACAF,OAAO,CAAC,IAAD,CAAP;EACD,CAHD;;EAKA,MAAMY,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IACAC,KAAK,CAAE,6BAA4BtB,IAAK,EAAnC,CAAL;EACD,CAHD,CAhCgB,CAqChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,WACGM,IAAI,gBACH;MAAK,SAAS,EAAC,YAAf;MAAA,UACGF,GAAG,CAACmB,GAAJ,CAASrB,EAAD,iBACP;QACE,OAAO,EAAE,MAAMc,QAAQ,CAACd,EAAE,CAACsB,GAAJ,CADzB;QAEE,SAAS,EAAC,wCAFZ;QAAA,UAIGtB,EAAE,CAACF;MAJN;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADG,GAWD,IAZN,EAaGQ,IAAI,gBACH;MAAK,KAAK,EAAC,MAAX;MAAkB,KAAK,EAAE;QAAEiB,KAAK,EAAE;MAAT,CAAzB;MAAA,uBACE;QAAK,KAAK,EAAC,WAAX;QAAA,wBACE;UAAI,KAAK,EAAC,YAAV;UAAA,UAAwBvB,EAAE,CAACF;QAA3B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAG,KAAK,EAAC,WAAT;UAAA,UAAsBE,EAAE,CAACwB;QAAzB;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAK,OAAO,EAAE,MAAMR,QAAQ,EAA5B;UAAgC,KAAK,EAAC,iBAAtC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADG,GAUD,IAvBN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;;GA9EQnB,M;;KAAAA,M;AAgFT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}