{"ast":null,"code":"import _objectSpread from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vanessa/Desktop/survey/client/src/components/Summary.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { qnBuffer, choiceBuffer } from \"./Home\";\nimport { StyledButton, StyledForm, StyledFormWrapper, StyledHeader } from \"./Style.js\";\n\nfunction Summary() {\n  var _this2 = this;\n\n  var userId = parseInt(useParams().id);\n  var resp_url = \"/questions/responses\";\n  var navigate = useNavigate();\n\n  var _useState = useState(\"disabled\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enableEdit = _useState2[0],\n      setEnableEdit = _useState2[1]; // editing disabled initially \n\n\n  var _useState3 = useState({\n    name: \" \",\n    colour: {\n      Blue: false,\n      Red: false,\n      Green: false,\n      Yellow: false,\n      Purple: false,\n      Pink: false\n    },\n    prog_lang: {\n      Python: false,\n      Java: false,\n      Ruby: false,\n      JavaScript: false,\n      Golang: false\n    },\n    languages: {\n      English: false,\n      Chinese: false,\n      Malay: false,\n      Tamil: false,\n      Hindi: false\n    },\n    would_pay: {\n      Yes: false,\n      No: false\n    }\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      resp = _useState4[0],\n      setResp = _useState4[1];\n\n  var handleEdit = function handleEdit() {\n    setEnableEdit(!enableEdit); // allow editing, activate submit button \n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var newResponse, response, server_response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              newResponse = {\n                method: \"PUT\",\n                mode: \"cors\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                id: userId,\n                body: JSON.stringify(resp)\n              };\n              _context.next = 4;\n              return fetch(resp_url, newResponse);\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              server_response = _context.sent;\n              console.log(\"server replied:\", server_response);\n              setEnableEdit(!enableEdit); // back to initial state \n\n              alert(\"Response updated\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetch(\"http://localhost:3500/questions/responses/\".concat(userId)).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setResp(resJson.data); //console.log(resJson)\n    });\n  }, []);\n\n  function handleChange(e) {\n    var newData = _objectSpread({}, resp); // copy curr data\n\n\n    newData[e.target.id] = e.target.value;\n    setResp(newData);\n  }\n\n  function handleCheckbox(e) {\n    var newData = _objectSpread({}, resp); // copy curr data\n\n\n    var updatedField = newData[e.target.id];\n    updatedField[e.target.value] = e.target.checked;\n    newData[e.target.id] = updatedField;\n    setResp(newData);\n  }\n  /**\n   * Generates HTML script to produce checkbox or radio inputs\n   * @param {*} arr \n   * @param {*} _id \n   * @param {*} _type \n   * @returns HTML script \n   */\n\n\n  function generateCheckBoxes() {\n    var _this = this;\n\n    var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _id = arguments.length > 1 ? arguments[1] : undefined;\n\n    var _type = arguments.length > 2 ? arguments[2] : undefined;\n\n    var field = resp[_id];\n    return arr.map(function (item) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: _type,\n        name: _id,\n        id: _id,\n        value: item,\n        disabled: enableEdit,\n        onChange: handleCheckbox,\n        checked: field.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 12\n        }\n      }), \" \", item);\n    });\n  }\n  /**\n   * Generates HTML script to produce inputs\n   * @param {*} choices \n   * @param {*} _type \n   * @returns HTML script\n   */\n\n\n  function generateInput() {\n    var choices = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _type = arguments.length > 1 ? arguments[1] : undefined;\n\n    var field = choices[0]; // value\n\n    switch (_type) {\n      case \"0\":\n        return /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          id: field,\n          value: resp.field,\n          disabled: enableEdit,\n          onChange: handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 16\n          }\n        });\n\n      case \"1\":\n        return generateCheckBoxes(choices[1], field, \"radio\");\n\n      case \"2\":\n        return generateCheckBoxes(choices[1], field, \"checkbox\");\n    }\n  }\n\n  var iterator = []; // stores form's script\n\n  qnBuffer.forEach(function (item, index) {\n    iterator.push( /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 24\n      }\n    }, item[0]))); // question\n\n    iterator.push( /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, generateInput(choiceBuffer[index], item[1]))); // choices\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: function onClick() {\n      return navigate(\"/\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(StyledFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, iterator)), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: enableEdit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !enableEdit,\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Edit\")))); // return (\n  // <div>\n  //   <StyledButton onClick={() => {navigate(\"/\")}}>Home</StyledButton>\n  //   <StyledHeader>Your response</StyledHeader>\n  //   <StyledFormWrapper>\n  //     <StyledForm onSubmit={e => handleSubmit(e)}>\n  //       <div>\n  //         <label>{qnBuffer[0]}</label>\n  //         <p><input type=\"text\" id=\"name\" value={resp.name} disabled={enableEdit} onChange={handleChange} /></p>\n  //       </div>\n  //       <div>\n  //         <label>{qnBuffer[1]}</label>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Blue\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Blue}/> Blue</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Red\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Red}/> Red</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Green\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Green}/> Green</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Yellow\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Yellow}/> Yellow</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Purple\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Purple}/> Purple</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Pink\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Pink}/> Pink</p>\n  //       </div>\n  //       <div>\n  //         <label>{qnBuffer[2]}</label>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"Python\" disabled={enableEdit} checked={resp.prog_lang.Python} onChange={handleCheckbox}/> Python</p>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"Java\" disabled={enableEdit} checked={resp.prog_lang.Java} onChange={handleCheckbox}/> Java</p>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"Ruby\" disabled={enableEdit} checked={resp.prog_lang.Ruby} onChange={handleCheckbox}/> Ruby</p>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"JavaScript\" disabled={enableEdit} checked={resp.prog_lang.JavaScript} onChange={handleCheckbox}/> JavaScript</p>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"Golang\" disabled={enableEdit} checked={resp.prog_lang.Golang} onChange={handleCheckbox}/> Golang</p>\n  //       </div>\n  //       <div>\n  //         <label>{qnBuffer[3]}</label>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"English\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.English}/> English</p>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"Chinese\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.Chinese}/> Chinese</p>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"Malay\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.Malay}/> Malay</p>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"Tamil\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.Tamil}/> Tamil</p>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"Hindi\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.Hindi}/> Hindi</p>\n  //       </div>\n  //       <div>\n  //         <label>{qnBuffer[4]}</label>\n  //         <p><input type=\"radio\" name=\"would_pay\" id=\"would_pay\" value=\"Yes\" disabled={enableEdit} checked={resp.would_pay.Yes} onChange={handleCheckbox}/> Yes</p>\n  //         <p><input type=\"radio\" name=\"would_pay\" id=\"would_pay\" value=\"No\" disabled={enableEdit} checked={resp.would_pay.No} onChange={handleCheckbox}/> No</p>\n  //       </div>\n  //       <button disabled={enableEdit} type=\"submit\">Submit</button>\n  //       <button disabled={!enableEdit} onClick={handleEdit}>Edit</button>\n  //     </StyledForm>\n  //     </StyledFormWrapper>\n  //   </div>\n  // )\n}\n\n;\nexport default Summary;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","qnBuffer","choiceBuffer","StyledButton","StyledForm","StyledFormWrapper","StyledHeader","Summary","userId","parseInt","id","resp_url","navigate","enableEdit","setEnableEdit","name","colour","Blue","Red","Green","Yellow","Purple","Pink","prog_lang","Python","Java","Ruby","JavaScript","Golang","languages","English","Chinese","Malay","Tamil","Hindi","would_pay","Yes","No","resp","setResp","handleEdit","handleSubmit","e","preventDefault","newResponse","method","mode","headers","body","JSON","stringify","fetch","response","json","server_response","console","log","alert","then","res","resJson","data","handleChange","newData","target","value","handleCheckbox","updatedField","checked","generateCheckBoxes","arr","_id","_type","field","map","item","generateInput","choices","iterator","forEach","index","push"],"sources":["/Users/vanessa/Desktop/survey/client/src/components/Summary.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { qnBuffer, choiceBuffer } from \"./Home\";\nimport {StyledButton, StyledForm, StyledFormWrapper, StyledHeader} from \"./Style.js\"\n\nfunction Summary() {\n\n  const userId = parseInt(useParams().id)\n  const resp_url = \"/questions/responses\"\n  const navigate = useNavigate()\n  const [enableEdit, setEnableEdit] = useState(\"disabled\") // editing disabled initially \n  const [resp, setResp] = useState({\n    name: \" \",\n    colour: {\n      Blue: false,\n      Red: false,\n      Green: false,\n      Yellow: false,\n      Purple: false,\n      Pink: false\n    },\n    prog_lang: {\n      Python: false,\n      Java: false,\n      Ruby: false,\n      JavaScript: false,\n      Golang: false\n    },\n    languages: {\n      English: false,\n      Chinese: false,\n      Malay: false,\n      Tamil: false,\n      Hindi: false\n    },\n    would_pay: {\n      Yes: false,\n      No: false\n    }\n  })\n\n  const handleEdit = () => {\n    setEnableEdit(!enableEdit) // allow editing, activate submit button \n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    \n    const newResponse = {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {'Content-Type': 'application/json'},\n      id: userId,\n      body: JSON.stringify(resp)\n    }\n    const response = await fetch(resp_url, newResponse) // post request to server \n    const server_response = await response.json()\n    console.log(\"server replied:\", server_response)\n    setEnableEdit(!enableEdit) // back to initial state \n    alert(\"Response updated\")\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:3500/questions/responses/${userId}`)\n      .then(res => res.json())\n      .then(resJson => {\n        setResp(resJson.data)\n        //console.log(resJson)\n      })\n  }, [])\n\n  function handleChange(e) {\n    const newData = { ...resp } // copy curr data\n    newData[e.target.id] = e.target.value\n    setResp(newData)\n  }\n\n  function handleCheckbox(e) {\n    const newData = { ...resp } // copy curr data\n    const updatedField = newData[e.target.id]\n    updatedField[e.target.value] = e.target.checked\n    newData[e.target.id] = updatedField\n    setResp(newData)\n  }\n\n  /**\n   * Generates HTML script to produce checkbox or radio inputs\n   * @param {*} arr \n   * @param {*} _id \n   * @param {*} _type \n   * @returns HTML script \n   */\n   function generateCheckBoxes(arr = [], _id, _type) {\n    let field = resp[_id]\n    return (\n      arr.map(item =>\n        <p><input type={_type} name={_id} id={_id} value={item} disabled={enableEdit} onChange={handleCheckbox} checked={field.item} /> {item}</p>\n      )\n    )\n  }\n\n  /**\n   * Generates HTML script to produce inputs\n   * @param {*} choices \n   * @param {*} _type \n   * @returns HTML script\n   */\n  function generateInput(choices =[], _type) {\n    let field = choices[0] // value\n    switch(_type) {\n      case \"0\":\n        return(<input type=\"text\" required id={field} value={resp.field} disabled={enableEdit} onChange={handleChange} />)\n      case \"1\":\n        return generateCheckBoxes(choices[1], field, \"radio\")\n      case \"2\":\n        return generateCheckBoxes(choices[1], field, \"checkbox\")\n    }\n  }\n\n  let iterator = []; // stores form's script\n  qnBuffer.forEach((item, index) => {\n    iterator.push(<div><label>{item[0]}</label></div>) // question\n    iterator.push(<div>{generateInput(choiceBuffer[index], item[1])}</div>) // choices\n  })\n\n  return (\n    <div>\n      <StyledButton onClick={() => navigate(\"/\")}>Home</StyledButton>\n      <StyledFormWrapper>\n        <StyledForm onSubmit={e => handleSubmit(e)}>\n          <div>\n            <label>{iterator}</label>\n          </div>\n          <button disabled={enableEdit} type=\"submit\">submit</button>\n          <button disabled={!enableEdit} onClick={handleEdit}>Edit</button>\n        </StyledForm>\n      </StyledFormWrapper>\n    </div>\n  )\n\n  // return (\n  // <div>\n  //   <StyledButton onClick={() => {navigate(\"/\")}}>Home</StyledButton>\n  //   <StyledHeader>Your response</StyledHeader>\n  //   <StyledFormWrapper>\n  //     <StyledForm onSubmit={e => handleSubmit(e)}>\n  //       <div>\n  //         <label>{qnBuffer[0]}</label>\n  //         <p><input type=\"text\" id=\"name\" value={resp.name} disabled={enableEdit} onChange={handleChange} /></p>\n  //       </div>\n  //       <div>\n  //         <label>{qnBuffer[1]}</label>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Blue\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Blue}/> Blue</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Red\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Red}/> Red</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Green\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Green}/> Green</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Yellow\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Yellow}/> Yellow</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Purple\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Purple}/> Purple</p>\n  //         <p><input type=\"checkbox\" id=\"colour\" value=\"Pink\" onChange={handleCheckbox} disabled={enableEdit} checked={resp.colour.Pink}/> Pink</p>\n  //       </div>\n  //       <div>\n  //         <label>{qnBuffer[2]}</label>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"Python\" disabled={enableEdit} checked={resp.prog_lang.Python} onChange={handleCheckbox}/> Python</p>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"Java\" disabled={enableEdit} checked={resp.prog_lang.Java} onChange={handleCheckbox}/> Java</p>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"Ruby\" disabled={enableEdit} checked={resp.prog_lang.Ruby} onChange={handleCheckbox}/> Ruby</p>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"JavaScript\" disabled={enableEdit} checked={resp.prog_lang.JavaScript} onChange={handleCheckbox}/> JavaScript</p>\n  //         <p><input type=\"radio\" name=\"prog_lang\" id=\"prog_lang\" value=\"Golang\" disabled={enableEdit} checked={resp.prog_lang.Golang} onChange={handleCheckbox}/> Golang</p>\n  //       </div>\n  //       <div>\n  //         <label>{qnBuffer[3]}</label>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"English\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.English}/> English</p>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"Chinese\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.Chinese}/> Chinese</p>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"Malay\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.Malay}/> Malay</p>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"Tamil\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.Tamil}/> Tamil</p>\n  //         <p><input type=\"checkbox\" id=\"languages\" value=\"Hindi\" disabled={enableEdit} onChange={handleCheckbox} checked={resp.languages.Hindi}/> Hindi</p>\n  //       </div>\n  //       <div>\n  //         <label>{qnBuffer[4]}</label>\n  //         <p><input type=\"radio\" name=\"would_pay\" id=\"would_pay\" value=\"Yes\" disabled={enableEdit} checked={resp.would_pay.Yes} onChange={handleCheckbox}/> Yes</p>\n  //         <p><input type=\"radio\" name=\"would_pay\" id=\"would_pay\" value=\"No\" disabled={enableEdit} checked={resp.would_pay.No} onChange={handleCheckbox}/> No</p>\n  //       </div>\n  //       <button disabled={enableEdit} type=\"submit\">Submit</button>\n  //       <button disabled={!enableEdit} onClick={handleEdit}>Edit</button>\n  //     </StyledForm>\n  //     </StyledFormWrapper>\n  //   </div>\n  // )\n};\n  \nexport default Summary;"],"mappings":"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"},"metadata":{},"sourceType":"module"}