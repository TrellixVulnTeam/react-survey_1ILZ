{"ast":null,"code":"import _objectSpread from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vanessa/Desktop/survey/client/src/components/PostForm.jsx\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { StyledButton, StyledForm, StyledFormWrapper } from \"./Style.jsx\";\n\nfunction PostForm() {\n  var resp_url = \"/questions/responses\"; // to server \n\n  var navigate = useNavigate();\n  var iterator = []; // stores form's script\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      choices = _useState4[0],\n      setChoices = _useState4[1];\n\n  var _useState5 = useState({\n    name: \" \",\n    colour: {\n      blue: false,\n      red: false,\n      green: false,\n      yellow: false,\n      purple: false,\n      pink: false\n    },\n    prog_lang: {\n      python: false,\n      java: false,\n      ruby: false,\n      javascript: false,\n      golang: false\n    },\n    languages: {\n      english: false,\n      chinese: false,\n      malay: false,\n      tamil: false,\n      hindi: false\n    },\n    would_pay: {\n      yes: false,\n      no: false\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  function getField(questionId) {\n    switch (questionId) {\n      case \"1\":\n        return \"name\";\n\n      case \"2\":\n        return \"colour\";\n\n      case \"3\":\n        return \"prog_lang\";\n\n      case \"4\":\n        return \"langugaes\";\n\n      case \"5\":\n        return \"would_pay\";\n\n      default:\n        return \"invalid id\";\n    }\n  } // fecth questions from server \n\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:3500/questions/list\").then(function (res) {\n                  return res.json();\n                }).then(function (resJson) {\n                  setQuestions(resJson);\n                });\n\n              case 2:\n                _data = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData().catch(console.error);\n  }, []); // fecth choices from server \n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"http://localhost:3500/questions/choice\").then(function (res) {\n                  return res.json();\n                }).then(function (resJson) {\n                  setChoices(resJson);\n                });\n\n              case 2:\n                _data = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData().catch(console.error);\n  }, []);\n\n  function handleChange(e) {\n    var newData = _objectSpread({}, data); // copy curr data\n\n\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n  }\n\n  function handleCheckbox(e) {\n    var newData = _objectSpread({}, data); // copy curr data\n\n\n    var updatedField = newData[e.target.id];\n    updatedField[e.target.value] = e.target.checked;\n    newData[e.target.id] = updatedField;\n    setData(newData);\n  }\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n  /**\n   * Generates HTML script to produce checkbox or radio inputs\n   */\n\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var newResponse, response, server_response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              newResponse = {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n              }; //console.log(\"client sent: \", newResponse.body)\n\n              _context3.next = 4;\n              return fetch(resp_url, newResponse);\n\n            case 4:\n              response = _context3.sent;\n              _context3.next = 7;\n              return response.json();\n\n            case 7:\n              server_response = _context3.sent;\n              console.log(\"server replied: \", server_response);\n              navigate(\"/Result\");\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function generateCheckBoxes(options, _id, _type) {\n    var field = data[_id];\n    var keys = Object.keys(options);\n\n    for (var key in keys) {\n      var val = options[key];\n      iterator.push( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: _type,\n        name: _id,\n        id: _id,\n        value: val,\n        onChange: handleCheckbox,\n        checked: field.val,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 24\n        }\n      }), \" \", val));\n    }\n  }\n\n  var choice_keys = Object.values(choices);\n\n  function getOptions(questionId) {\n    var options = [];\n    var i = 0;\n\n    for (var key in choice_keys) {\n      var curr = choices[key];\n\n      if (String(curr[\"field2\"]) === questionId) {\n        options[i] = curr[\"field3\"];\n        i++;\n      }\n    }\n\n    console.log(\"OPTIONS\", options);\n    return options;\n  }\n  /**\n   * Generates HTML script to produce inputs\n   */\n\n\n  function generateInput(questionId, _type) {\n    var field = getField(questionId); // value\n\n    switch (_type) {\n      case \"textbox\":\n        iterator.push( /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          id: field,\n          value: data.field,\n          onChange: handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 23\n          }\n        }));\n\n      case \"radio\":\n        return generateCheckBoxes(getOptions(questionId), field, \"radio\");\n\n      case \"checkbox\":\n        return generateCheckBoxes(getOptions(questionId), field, \"checkbox\");\n\n      default:\n        iterator.push( /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 23\n          }\n        }, \"Loading...\"));\n    }\n  }\n\n  var qn_keys = Object.keys(questions);\n  console.log(questions);\n  console.log(qn_keys);\n\n  for (var key in qn_keys) {\n    var curr_qn = questions[key];\n    iterator.push( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 24\n      }\n    }, curr_qn[\"field2\"]))); // question\n\n    generateInput(curr_qn[\"field1\"], curr_qn[\"field3\"]); // choices\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: function onClick() {\n      return navigate(-1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(StyledFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 14\n    }\n  }, iterator)), /*#__PURE__*/React.createElement(StyledButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"submit\"))));\n}\n\nexport default PostForm;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","StyledButton","StyledForm","StyledFormWrapper","PostForm","resp_url","navigate","iterator","questions","setQuestions","choices","setChoices","name","colour","blue","red","green","yellow","purple","pink","prog_lang","python","java","ruby","javascript","golang","languages","english","chinese","malay","tamil","hindi","would_pay","yes","no","data","setData","getField","questionId","fetchData","fetch","then","res","json","resJson","_data","catch","console","error","handleChange","e","newData","target","id","value","handleCheckbox","updatedField","checked","handleSubmit","preventDefault","newResponse","method","mode","headers","body","JSON","stringify","response","server_response","log","generateCheckBoxes","options","_id","_type","field","keys","Object","key","val","push","choice_keys","values","getOptions","i","curr","String","generateInput","qn_keys","curr_qn"],"sources":["/Users/vanessa/Desktop/survey/client/src/components/PostForm.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { StyledButton, StyledForm, StyledFormWrapper } from \"./Style.jsx\"\n\nfunction PostForm() {\n  const resp_url = \"/questions/responses\" // to server \n  const navigate = useNavigate()\n  let iterator = []; // stores form's script\n  const [questions, setQuestions] = useState([])\n  const [choices, setChoices] = useState([])\n  const [data, setData] = useState({\n    name: \" \",\n    colour: {\n      blue: false,\n      red: false,\n      green: false,\n      yellow: false,\n      purple: false,\n      pink: false\n    },\n    prog_lang: {\n      python: false,\n      java: false,\n      ruby: false,\n      javascript: false,\n      golang: false\n    },\n    languages: {\n      english: false,\n      chinese: false,\n      malay: false,\n      tamil: false,\n      hindi: false\n    },\n    would_pay: {\n      yes: false,\n      no: false\n    }\n  })\n\n  function getField(questionId) {\n    switch (questionId) {\n      case \"1\":\n        return \"name\"\n      case \"2\":\n        return \"colour\"\n      case \"3\":\n        return \"prog_lang\"\n      case \"4\":\n        return \"langugaes\"\n      case \"5\":\n        return \"would_pay\"\n      default:\n        return \"invalid id\"\n    }\n  }\n\n  // fecth questions from server \n  useEffect(() => {\n    const fetchData = async () => {\n      const _data = await fetch(\"http://localhost:3500/questions/list\")\n      .then(res => res.json())\n      .then(resJson => {setQuestions(resJson)})\n    }\n    \n    fetchData()\n    .catch(console.error)\n  } , [])\n\n    // fecth choices from server \n    useEffect(() => {\n      const fetchData = async () => {\n        const _data = await fetch(\"http://localhost:3500/questions/choice\")\n        .then(res => res.json())\n        .then(resJson => {setChoices(resJson)})\n      }\n      \n      fetchData()\n      .catch(console.error)\n    } , [])\n\n  function handleChange(e) {\n    const newData = { ...data } // copy curr data\n    newData[e.target.id] = e.target.value\n    setData(newData)\n  }\n\n  function handleCheckbox(e) {\n    const newData = { ...data } // copy curr data\n    const updatedField = newData[e.target.id]\n    updatedField[e.target.value] = e.target.checked\n    newData[e.target.id] = updatedField\n    setData(newData)\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const newResponse = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    }\n    //console.log(\"client sent: \", newResponse.body)\n    const response = await fetch(resp_url, newResponse) // post request to server \n    const server_response = await response.json()\n    console.log(\"server replied: \", server_response)\n    navigate(\"/Result\")\n  }\n\n  /**\n   * Generates HTML script to produce checkbox or radio inputs\n   */\n  function generateCheckBoxes(options, _id, _type) {\n    let field = data[_id]\n    const keys = Object.keys(options)\n   \n    for(var key in keys) { \n      const val = options[key]\n      iterator.push(<p><input type={_type} name={_id} id={_id} value={val} onChange={handleCheckbox} checked={field.val} /> {val}</p>) \n    }\n  }\n\n  const choice_keys = Object.values(choices)\n  function getOptions(questionId) {\n    let options = []\n    let i = 0;\n    for(var key in choice_keys) {\n      let curr = choices[key]\n      if(String(curr[\"field2\"]) === questionId) {\n        options[i] = curr[\"field3\"]\n        i++\n      }\n    }\n    console.log(\"OPTIONS\", options)\n    return options\n  }\n\n  /**\n   * Generates HTML script to produce inputs\n   */\n  function generateInput(questionId, _type) {\n    let field = getField(questionId) // value\n\n    switch (_type) {\n      case \"textbox\":\n        iterator.push(<input type=\"text\" required id={field} value={data.field} onChange={handleChange} />)\n      case \"radio\":\n        return generateCheckBoxes(getOptions(questionId), field, \"radio\")\n      case \"checkbox\":\n        return generateCheckBoxes(getOptions(questionId), field, \"checkbox\")\n      default:\n        iterator.push(<div>Loading...</div>)\n    }\n  }\n\n  const qn_keys = Object.keys(questions)\n  console.log(questions)\n  console.log(qn_keys)\n  for(var key in qn_keys) {\n    const curr_qn = questions[key]\n    iterator.push(<div><label>{curr_qn[\"field2\"]}</label></div>) // question\n    generateInput(curr_qn[\"field1\"], curr_qn[\"field3\"]) // choices\n  }\n\n  return (\n    <div>\n      <StyledButton onClick={() => navigate(-1)}>Back</StyledButton>\n      <StyledFormWrapper>\n        <StyledForm onSubmit={e => handleSubmit(e)}>\n          <div>\n             <label>{iterator}</label>\n          </div>\n          <StyledButton type=\"submit\">submit</StyledButton>\n        </StyledForm>\n      </StyledFormWrapper>\n    </div>\n  )\n}\n\nexport default PostForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}