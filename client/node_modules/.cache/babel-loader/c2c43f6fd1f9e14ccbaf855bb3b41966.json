{"ast":null,"code":"import _objectSpread from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/vanessa/Desktop/survey/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vanessa/Desktop/survey/client/src/components/ViewForm.jsx\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { StyledButton, StyledForm, StyledFormWrapper } from \"./Style.jsx\";\n\nfunction ViewForm(_id) {\n  var userId = parseInt(useParams().id);\n  var navigate = useNavigate();\n  var resp_url = 'http://localhost:3500/questions/responses';\n  var iterator = []; // stores form's script\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      choices = _useState4[0],\n      setChoices = _useState4[1];\n\n  var _useState5 = useState({\n    name: \" \",\n    colour: {\n      blue: false,\n      red: false,\n      green: false,\n      yellow: false,\n      purple: false,\n      pink: false\n    },\n    prog_lang: {\n      python: false,\n      java: false,\n      ruby: false,\n      javascript: false,\n      golang: false\n    },\n    languages: {\n      english: false,\n      chinese: false,\n      malay: false,\n      tamil: false,\n      hindi: false\n    },\n    would_pay: {\n      yes: false,\n      no: false\n    }\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1]; // function getField(key) {\n  //   switch (key) {\n  //     case \"blue\":\n  //       return \"colour\"\n  //     case \"python\":\n  //       return \"prog_lang\"\n  //     case \"english\":\n  //       return \"languages\"\n  //     case \"5\":\n  //       return \"would_pay\"\n  //     default:\n  //       return \"invalid id\"\n  //   }\n  // }\n  // fecth questions from server \n\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:3500/questions/list\").then(function (res) {\n                  return res.json();\n                }).then(function (resJson) {\n                  setQuestions(resJson);\n                });\n\n              case 2:\n                _data = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData().catch(console.error);\n  }, []); // fecth choices from server \n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(\"http://localhost:3500/questions/choice\").then(function (res) {\n                  return res.json();\n                }).then(function (resJson) {\n                  setChoices(resJson);\n                });\n\n              case 2:\n                _data = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData().catch(console.error);\n  }, []); // fetch user's response\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _data;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(\"http://localhost:3500/questions/responses/\".concat(userId)).then(function (res) {\n                  return res.json();\n                }).then(function (resJson) {\n                  _setData(resJson.userData[0]);\n                });\n\n              case 2:\n                _data = _context3.sent;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function fetchData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    fetchData().catch(console.error);\n  }, []);\n\n  function _setData(resp) {\n    var keys = Object.keys(resp);\n\n    for (var i = 0; i < data; i++) {\n      console.log(\"KEY\", keys[0]);\n\n      if (key === \"id\") {// ignore\n      } else if (key === \"name\") {\n        handleChange(key, resp[key]);\n      } else {\n        var field = getField(key);\n        handleCheckbox(key, field, resp[key]);\n      }\n    }\n  }\n\n  function getField(val) {\n    var keys = Object.keys(data);\n    var curr = \"\";\n\n    for (var key in keys) {\n      // console.log(data[keys[key]])\n      if (val in data) {\n        curr = key;\n        break;\n      }\n    }\n\n    return curr;\n  }\n\n  function handleChange(key, value) {\n    var newData = _objectSpread({}, data); // copy curr data\n\n\n    newData[key] = value;\n    setData(newData);\n  }\n\n  function handleCheckbox(key, field, value) {\n    var newData = _objectSpread({}, data); // copy curr data\n\n\n    var updatedField = newData[field];\n    updatedField[key] = value;\n    newData[field] = updatedField;\n    setData(newData);\n  }\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n  /**\n   * Generates HTML script to produce checkbox or radio inputs\n   */\n\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e) {\n      var newResponse, response, server_response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              e.preventDefault();\n              newResponse = {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n              };\n              console.log(\"client sent: \", newResponse.body);\n              _context4.next = 5;\n              return fetch(resp_url, newResponse);\n\n            case 5:\n              response = _context4.sent;\n              _context4.next = 8;\n              return response.json();\n\n            case 8:\n              server_response = _context4.sent;\n              console.log(\"server replied: \", server_response); //navigate(\"/Result\")\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function generateCheckBoxes(options, _id, _type) {\n    var field = data[_id];\n    var keys = Object.keys(options);\n\n    for (var key in keys) {\n      var val = options[key];\n      iterator.push( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: _type,\n        name: _id,\n        id: _id,\n        value: val,\n        onChange: handleCheckbox,\n        checked: field[val],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 24\n        }\n      }), \" \", val));\n    }\n  }\n\n  var choice_keys = Object.values(choices);\n\n  function getOptions(questionId) {\n    var options = [];\n    var i = 0;\n\n    for (var key in choice_keys) {\n      var curr = choices[key];\n\n      if (String(curr[\"field2\"]) === questionId) {\n        options[i] = curr[\"field3\"];\n        i++;\n      }\n    }\n\n    return options;\n  }\n  /**\n   * Generates HTML script to produce inputs\n   */\n\n\n  function generateInput(questionId, _type) {\n    var field = getField(questionId); // value\n\n    switch (_type) {\n      case \"textbox\":\n        iterator.push( /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          id: field,\n          value: data.field,\n          onChange: handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 23\n          }\n        }));\n\n      case \"radio\":\n        return generateCheckBoxes(getOptions(questionId), field, \"radio\");\n\n      case \"checkbox\":\n        return generateCheckBoxes(getOptions(questionId), field, \"checkbox\");\n\n      default:\n        iterator.push( /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 23\n          }\n        }, \"Loading...\"));\n    }\n  }\n\n  var qn_keys = Object.keys(questions);\n\n  for (var key in qn_keys) {\n    var curr_qn = questions[key];\n    iterator.push( /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 24\n      }\n    }, curr_qn[\"field2\"]))); // question\n\n    generateInput(curr_qn[\"field1\"], curr_qn[\"field3\"]); // choices\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: function onClick() {\n      return navigate(-1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(StyledFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, iterator)), /*#__PURE__*/React.createElement(StyledButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"submit\"))));\n}\n\nexport default ViewForm;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","StyledButton","StyledForm","StyledFormWrapper","ViewForm","_id","userId","parseInt","id","navigate","resp_url","iterator","questions","setQuestions","choices","setChoices","name","colour","blue","red","green","yellow","purple","pink","prog_lang","python","java","ruby","javascript","golang","languages","english","chinese","malay","tamil","hindi","would_pay","yes","no","data","setData","fetchData","fetch","then","res","json","resJson","_data","catch","console","error","_setData","userData","resp","keys","Object","i","log","key","handleChange","field","getField","handleCheckbox","val","curr","value","newData","updatedField","handleSubmit","e","preventDefault","newResponse","method","mode","headers","body","JSON","stringify","response","server_response","generateCheckBoxes","options","_type","push","choice_keys","values","getOptions","questionId","String","generateInput","qn_keys","curr_qn"],"sources":["/Users/vanessa/Desktop/survey/client/src/components/ViewForm.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { StyledButton, StyledForm, StyledFormWrapper } from \"./Style.jsx\"\n\nfunction ViewForm(_id) {\n  const userId = parseInt(useParams().id)\n  const navigate = useNavigate()\n  const resp_url = 'http://localhost:3500/questions/responses'\n  let iterator = []; // stores form's script\n  const [questions, setQuestions] = useState([])\n  const [choices, setChoices] = useState([])\n  const [data, setData] = useState({\n    name: \" \",\n    colour: {\n      blue: false,\n      red: false,\n      green: false,\n      yellow: false,\n      purple: false,\n      pink: false\n    },\n    prog_lang: {\n      python: false,\n      java: false,\n      ruby: false,\n      javascript: false,\n      golang: false\n    },\n    languages: {\n      english: false,\n      chinese: false,\n      malay: false,\n      tamil: false,\n      hindi: false\n    },\n    would_pay: {\n      yes: false,\n      no: false\n    }\n  })\n\n  // function getField(key) {\n  //   switch (key) {\n  //     case \"blue\":\n  //       return \"colour\"\n  //     case \"python\":\n  //       return \"prog_lang\"\n  //     case \"english\":\n  //       return \"languages\"\n  //     case \"5\":\n  //       return \"would_pay\"\n  //     default:\n  //       return \"invalid id\"\n  //   }\n  // }\n\n  // fecth questions from server \n  useEffect(() => {\n    const fetchData = async () => {\n      const _data = await fetch(\"http://localhost:3500/questions/list\")\n        .then(res => res.json())\n        .then(resJson => { setQuestions(resJson) })\n    }\n\n    fetchData()\n      .catch(console.error)\n  }, [])\n\n  // fecth choices from server \n  useEffect(() => {\n    const fetchData = async () => {\n      const _data = await fetch(\"http://localhost:3500/questions/choice\")\n        .then(res => res.json())\n        .then(resJson => { setChoices(resJson) })\n    }\n\n    fetchData()\n      .catch(console.error)\n  }, [])\n\n  // fetch user's response\n  useEffect(() => {\n    const fetchData = async () => {\n      const _data = await fetch(`http://localhost:3500/questions/responses/${userId}`)\n        .then(res => res.json())\n        .then(resJson => { _setData(resJson.userData[0]) })\n    }\n\n    fetchData()\n      .catch(console.error)\n  }, [])\n\n  function _setData(resp) {\n    const keys = Object.keys(resp)\n    for (let i = 0; i < data; i++) {\n      console.log(\"KEY\", keys[0])\n      if (key === \"id\") {\n        // ignore\n      } else if (key === \"name\") {\n        handleChange(key, resp[key])\n      } else {\n        const field = getField(key)\n        handleCheckbox(key, field, resp[key])\n      }\n    }\n  }\n\n  function getField(val) {\n    \n    const keys = Object.keys(data)\n    let curr = \"\"\n    for(var key in keys) {\n     // console.log(data[keys[key]])\n      if(val in data) {\n        curr = key\n        break\n      }\n    }\n    return curr\n  }\n\n  function handleChange(key, value) {\n    const newData = { ...data } // copy curr data\n    newData[key] = value\n    setData(newData)\n  }\n\n  function handleCheckbox(key, field, value) {\n    const newData = { ...data } // copy curr data\n    const updatedField = newData[field]\n    updatedField[key] = value\n    newData[field] = updatedField\n    setData(newData)\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const newResponse = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    }\n    console.log(\"client sent: \", newResponse.body)\n    const response = await fetch(resp_url, newResponse) // post request to server \n    const server_response = await response.json()\n    console.log(\"server replied: \", server_response)\n    //navigate(\"/Result\")\n  }\n\n  /**\n   * Generates HTML script to produce checkbox or radio inputs\n   */\n  function generateCheckBoxes(options, _id, _type) {\n    let field = data[_id]\n    const keys = Object.keys(options)\n\n    for (var key in keys) {\n      const val = options[key]\n      iterator.push(<p><input type={_type} name={_id} id={_id} value={val} onChange={handleCheckbox} checked={field[val]} /> {val}</p>)\n    }\n  }\n\n  const choice_keys = Object.values(choices)\n  function getOptions(questionId) {\n    let options = []\n    let i = 0;\n    for (var key in choice_keys) {\n      let curr = choices[key]\n      if (String(curr[\"field2\"]) === questionId) {\n        options[i] = curr[\"field3\"]\n        i++\n      }\n    }\n    return options\n  }\n\n  /**\n   * Generates HTML script to produce inputs\n   */\n  function generateInput(questionId, _type) {\n    let field = getField(questionId) // value\n\n    switch (_type) {\n      case \"textbox\":\n        iterator.push(<input type=\"text\" required id={field} value={data.field} onChange={handleChange} />)\n      case \"radio\":\n        return generateCheckBoxes(getOptions(questionId), field, \"radio\")\n      case \"checkbox\":\n        return generateCheckBoxes(getOptions(questionId), field, \"checkbox\")\n      default:\n        iterator.push(<div>Loading...</div>)\n    }\n  }\n\n  const qn_keys = Object.keys(questions)\n  for (var key in qn_keys) {\n    const curr_qn = questions[key]\n    iterator.push(<div><label>{curr_qn[\"field2\"]}</label></div>) // question\n    generateInput(curr_qn[\"field1\"], curr_qn[\"field3\"]) // choices\n  }\n\n  return (\n    <div>\n      <StyledButton onClick={() => navigate(-1)}>Back</StyledButton>\n      <StyledFormWrapper>\n        <StyledForm onSubmit={e => handleSubmit(e)}>\n          <div>\n            <label>{iterator}</label>\n          </div>\n          <StyledButton type=\"submit\">submit</StyledButton>\n        </StyledForm>\n      </StyledFormWrapper>\n    </div>\n  )\n}\n\nexport default ViewForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}